<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxX1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>